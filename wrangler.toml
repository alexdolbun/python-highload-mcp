name = "python-highload-mcp"
main = "src/worker.js"
compatibility_date = "2024-08-15"
compatibility_flags = ["nodejs_compat"]

# Workers configuration for high-performance MCP server
[build]
command = "npm run build"
cwd = "."
watch_dir = "src"

# Environment variables for different deployment stages
[env.development]
name = "python-highload-mcp-dev"
vars = { ENVIRONMENT = "development", LOG_LEVEL = "debug" }

[env.staging]  
name = "python-highload-mcp-staging"
vars = { ENVIRONMENT = "staging", LOG_LEVEL = "info" }

[env.production]
name = "python-highload-mcp-prod"
vars = { ENVIRONMENT = "production", LOG_LEVEL = "warn" }

# Wasm bindings for Python integration (if needed)
[[wasm_modules]]
name = "python_highload"
source = "./lib/python_highload.wasm"

# KV storage for caching and state management
[[kv_namespaces]]
binding = "MCP_CACHE"
preview_id = "mcp-cache-preview"
id = "mcp-cache-prod"

# Durable Objects for stateful operations
[[durable_objects.bindings]]
name = "MCP_STATE"
class_name = "MCPState"

[[migrations]]
tag = "v1"
new_classes = ["MCPState"]

# R2 bucket for artifact storage
[[r2_buckets]]
binding = "ARTIFACTS"
bucket_name = "python-highload-artifacts"
preview_bucket_name = "python-highload-artifacts-preview"

# Analytics Engine for performance metrics
[[analytics_engine_datasets]]
binding = "PERFORMANCE_METRICS"

# Queue for async processing
[[queues.producers]]
queue = "mcp-processing-queue"
binding = "MCP_QUEUE"

[[queues.consumers]]
queue = "mcp-processing-queue"
max_batch_size = 100
max_batch_timeout = 30
max_retries = 3
dead_letter_queue = "mcp-dlq"

# Rate limiting configuration
[limits]
cpu_ms = 50000
memory_mb = 128

# Custom domain configuration (optional)
# [[routes]]
# pattern = "mcp.yourdomain.com/*"
# zone_name = "yourdomain.com"

# Development configuration
[dev]
ip = "127.0.0.1"
port = 8787
local_protocol = "http"
upstream_protocol = "https"

# Build configuration optimized for performance
[build.upload]
format = "service-worker"
dir = "./dist"
main = "./src/worker.js"

# Compatibility settings for Node.js libraries
node_compat = true

# Performance optimizations
[observability]
enabled = true

# Tail worker logs to file (for CI/CD debugging)
[vars]
NODE_ENV = "production"
PYTHON_MCP_VERSION = "1.0.0"
MAX_REQUESTS_PER_MINUTE = "1000"
CACHE_TTL = "3600"

# Secrets (these should be set via wrangler secret put)
# CLOUDFLARE_API_TOKEN (for CI/CD)
# DATABASE_URL (if using external database)
# ENCRYPTION_KEY (for sensitive data)
